name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Allow write access to repository contents

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      # Run pre-commit hooks
      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files

      # Run linters
      - name: Run linters
        run: |
          poetry run black .
          poetry run isort .
          poetry run flake8 .
          poetry run pylint .
          poetry run mypy .

      # Run tests
      - name: Run tests
        run: poetry run pytest tests

      # Run coverage
      - name: Run coverage
        run: |
          poetry run coverage run -m pytest tests  # Run pytest tests
          poetry run coverage report -m  # Show coverage report
          poetry run coverage html  # Generate HTML coverage report

      # Upload HTML Report
      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/  # Path to the HTML coverage report

      # Build project with Poetry
      - name: Build project with Poetry
        run: poetry build

      # Extract version name from the tag
      - name: Extract version name
        id: get_version
        run: |
          version_name=${GITHUB_REF#refs/tags/}  # Extract version name
          echo "version=$version_name" >> $GITHUB_ENV  # Set version in environment variable

      # Read CHANGELOG.md for release notes
      - name: Read CHANGELOG.md
        id: changelog
        run: |
          changelog_body=$(awk '/^---/{exit} {print}' CHANGELOG.md)  # Get all lines until the first `---`

          # Use Here-Document syntax to set the body variable in a way GitHub Actions can handle
          echo "changelog_body<<EOF" >> $GITHUB_ENV
          echo "$changelog_body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}  # Use the tag name for the release
          release_name: "Release ${{ env.version }}"  # Name of the release using the extracted version
          body: ${{ env.body }}  # Use the changelog output as the release body
          files: dist/*  # Upload the built files (sdist and wheel files)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure the token is correct
